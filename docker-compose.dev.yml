# docker-compose.dev.yml
services:
  # Frontend React com hot reload
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: clima-mt-frontend-dev
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8080
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./index.html:/app/index.html
      - ./vite.config.js:/app/vite.config.js
    command: npm run dev -- --host
    networks:
      - clima-network

  # Backend Node.js com nodemon
  backend:
    build:
      context: ./backend
      target: dev
    container_name: clima-mt-backend-dev
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mysql
      - redis
    networks:
      - clima-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: clima-mt-mysql-dev
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-devpassword}
      MYSQL_DATABASE: ${DB_NAME:-firewatch}
      MYSQL_USER: ${DB_USER:-climauser}
      MYSQL_PASSWORD: ${DB_PASSWORD:-devpassword}
    volumes:
      - mysql-data-dev:/var/lib/mysql
    networks:
      - clima-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: clima-mt-redis-dev
    ports:
      - "6379:6379"
    networks:
      - clima-network

  # Adminer para gerenciar MySQL
  adminer:
    image: adminer
    container_name: clima-mt-adminer
    ports:
      - "8081:8080"
    networks:
      - clima-network
    depends_on:
      - mysql

volumes:
  mysql-data-dev:

networks:
  clima-network:
    driver: bridge
